name: Performance Diff

on:
  pull_request:
    branches: [ main, master ]

jobs:
  performance-diff:
    runs-on: ubuntu-latest
    
    permissions:
      pull-requests: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    # Build and benchmark current branch (PR)
    - name: Build and benchmark current branch
      run: |
        echo "Building PR branch..."
        dotnet build --configuration Release --no-restore
        echo "Running benchmarks..."
        dotnet run --project src/HashStamp.Benchmarks/HashStamp.Benchmarks.csproj --configuration Release --no-build -- --quick 2>&1 | tee pr_benchmark.txt
    
    - name: Collect PR benchmark results
      run: |
        echo "=== PR Branch Benchmark Results ===" > performance_report.md
        echo "" >> performance_report.md
        echo "**Benchmark Output:**" >> performance_report.md
        echo "\`\`\`" >> performance_report.md
        cat pr_benchmark.txt | grep -A 20 "| Method\|Mean\|Error\|StdDev\|Ratio" >> performance_report.md
        echo "\`\`\`" >> performance_report.md
        echo "" >> performance_report.md
        
        # Get assembly sizes
        echo "**Assembly Sizes:**" >> performance_report.md
        echo "\`\`\`" >> performance_report.md
        echo "PR Branch:" >> performance_report.md
        ls -la src/HashStamp/bin/Release/netstandard2.0/ | grep "\.dll$" >> performance_report.md || echo "No DLLs found" >> performance_report.md
        ls -la src/HashStamp.Benchmarks/bin/Release/net8.0/ | grep "\.dll$" >> performance_report.md || echo "No DLLs found" >> performance_report.md
        echo "\`\`\`" >> performance_report.md
    
    # Checkout base branch and build for comparison
    - name: Checkout base branch
      run: |
        git checkout ${{ github.event.pull_request.base.sha }}
        dotnet restore
    
    - name: Build and benchmark base branch
      run: |
        echo "Building base branch..."
        dotnet build --configuration Release --no-restore
        echo "Running benchmarks..."
        dotnet run --project src/HashStamp.Benchmarks/HashStamp.Benchmarks.csproj --configuration Release --no-build -- --quick 2>&1 | tee base_benchmark.txt
    
    - name: Collect base benchmark results and generate comparison
      run: |
        echo "" >> performance_report.md
        echo "=== Base Branch Benchmark Results ===" >> performance_report.md
        echo "" >> performance_report.md
        echo "**Benchmark Output:**" >> performance_report.md
        echo "\`\`\`" >> performance_report.md
        cat base_benchmark.txt | grep -A 20 "| Method\|Mean\|Error\|StdDev\|Ratio" >> performance_report.md
        echo "\`\`\`" >> performance_report.md
        echo "" >> performance_report.md
        
        # Get assembly sizes for base
        echo "**Assembly Sizes:**" >> performance_report.md
        echo "\`\`\`" >> performance_report.md
        echo "Base Branch:" >> performance_report.md
        ls -la src/HashStamp/bin/Release/netstandard2.0/ | grep "\.dll$" >> performance_report.md || echo "No DLLs found" >> performance_report.md
        ls -la src/HashStamp.Benchmarks/bin/Release/net8.0/ | grep "\.dll$" >> performance_report.md || echo "No DLLs found" >> performance_report.md
        echo "\`\`\`" >> performance_report.md
        
        # Add comparison summary
        echo "" >> performance_report.md
        echo "=== Performance Analysis ===" >> performance_report.md
        echo "" >> performance_report.md
        echo "This report compares benchmark performance between the PR and base branches." >> performance_report.md
        echo "" >> performance_report.md
        echo "**Key metrics to review:**" >> performance_report.md
        echo "- Compile-time hash access performance" >> performance_report.md
        echo "- Runtime hash lookup performance" >> performance_report.md  
        echo "- Memory allocation differences" >> performance_report.md
        echo "- Assembly size changes" >> performance_report.md
        echo "" >> performance_report.md
        
        # Check for significant performance changes
        echo "**Analysis Notes:**" >> performance_report.md
        echo "- Ratios > 1.1x indicate potential performance regression" >> performance_report.md
        echo "- Ratios < 0.9x indicate potential performance improvement" >> performance_report.md
        echo "- Memory allocation changes should be investigated" >> performance_report.md
    
    - name: Comment PR
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('performance_report.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## âš¡ Performance Benchmark Report\n\n${report}`
          });